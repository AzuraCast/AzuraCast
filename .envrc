# Commands dependencies
# =====================
#
DIRENV_CMD_DEPENDENCIES="unzip tar mkdir curl chmod rm"
for mandatory_cmd in ${DIRENV_CMD_DEPENDENCIES}; do
    if [ -z "$(which ${mandatory_cmd})" ]; then
         echo "--- mandatory command not found: ${mandatory_cmd}"
         exit 1
    fi
done
#
# Direnv configuration
# =====================
#
layout_python3
export DIRENV_TMP_DIR="${PWD}/.direnv"
export DIRENV_BIN_DIR="${DIRENV_TMP_DIR}/bin"
if [ ! -e "${DIRENV_BIN_DIR}" ]; then
    mkdir -p "${DIRENV_BIN_DIR}"
fi
export PATH="${DIRENV_BIN_DIR}:${PATH}"
#
# Ansible configuration
# =====================
#
export ANSIBLE_INVENTORY="${PWD}/hosts"
export ANSIBLE_ROLES_PATH="${PWD}/roles"
export MOLECULE_COMMONS_DIR="${PWD}/test/molecule"
export MOLECULE_DOCKER_SSH_PORT_DEBIAN="22001"
export MOLECULE_DOCKER_SSH_PORT_ALPINE="22002"
export ANSIBLE_COLLECTIONS_PATH="${DIRENV_TMP_DIR}"
# export ANSIBLE_STRATEGY_PLUGINS="${PWD}/$(find .direnv/ -type d | grep mitogen | grep plugins | grep strategy | grep -v pycache)"
# export ANSIBLE_STRATEGY="mitogen_linear"
if [ -e "${PWD}/ssh.cfg" ]; then
    export ANSIBLE_SSH_ARGS="-F ${PWD}/ssh.cfg"
fi
if [ -z "${ANSIBLE_LIBRARY}"]; then
    export ANSIBLE_LIBRARY="${PROJECT_DIR}/plugins/modules"
else
    export ANSIBLE_LIBRARY="${PROJECT_DIR}/plugins/modules:${ANSIBLE_LIBRARY}"
fi
#
# Sphinx configuration
# =====================
#
DIRENV_PYTHON_LIBS_DIR_RELATIVE="$(find ${DIRENV_TMP_DIR} -type d -name site-packages)"
export DIRENV_PYTHON_LIBS_DIR="$(realpath ${DIRENV_PYTHON_LIBS_DIR_RELATIVE})"

