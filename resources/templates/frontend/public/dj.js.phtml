$(function() {
    var web_dj = new Vue({
        el: '#web_dj',
        data: {
            settings: {
                is_streaming: false,
                base_uri: <?=$this->escapeJs($base_uri) ?>,
                dj_username: "",
                dj_password: "",
                bitrate: 128,
                samplerate: 44100,
                channels: 2,
                encoder: "mp3",
                asynchronous: true,
                pass_through: false
            },
            metadata: {
                title: "",
                artist: ""
            },
            playlist_1: {
                volume: 100,
                pass_through: false
            },
            playlist_2: {
                volume: 100,
                pass_through: false
            },
            mixer: {
                position: 50
            },
            microphone: {
                volume: 100,
                pass_through: false
            }
        },
        computed: {
            "uri": function() {
                return 'wss://'+this.dj_username+':'+this.dj_password+'@'+this.base_uri;
            }
        },
        methods: {
            "startStreaming": function() {
                this.settings.is_streaming = true;
            },
            "stopStreaming": function() {
                this.settings.is_streaming = false;
            },
            "turnAllPassthroughsOff": function() {
                this.settings.pass_through = false;
                this.playlist_1.pass_through = false;
                this.playlist_2.pass_through = false;
                this.microphone.pass_through = false;
            },
            "toggleMasterPassthrough": function() {
                if (!this.settings.pass_through) {
                    this.turnAllPassthroughsOff();
                }
                this.settings.pass_through = !this.settings.pass_through;
            },
            "updateMetadata": function() {

            }
        }
    });
});

/*
(function() {
    $(function() {
        Webcaster.mixer = new Webcaster.Model.Mixer({
            slider: 50
        });
        Webcaster.settings = new Webcaster.Model.Settings({

        }, {
            mixer: Webcaster.mixer
        });
        Webcaster.node = new Webcaster.Node({
            model: Webcaster.settings
        });
        _.extend(Webcaster, {
            views: {
                settings: new Webcaster.View.Settings({
                    model: Webcaster.settings,
                    node: Webcaster.node,
                    el: $("div.settings")
                }),
                mixer: new Webcaster.View.Mixer({
                    model: Webcaster.mixer,
                    el: $("div.mixer")
                }),
                microphone: new Webcaster.View.Microphone({
                    model: new Webcaster.Model.Microphone({
                        trackGain: 100,
                        passThrough: false
                    }, {
                        mixer: Webcaster.mixer,
                        node: Webcaster.node
                    }),
                    el: $("div.microphone")
                }),
                playlistLeft: new Webcaster.View.Playlist({
                    model: new Webcaster.Model.Playlist({
                        side: "left",
                        files: [],
                        fileIndex: -1,
                        volumeLeft: 0,
                        volumeRight: 0,
                        trackGain: 100,
                        passThrough: false,
                        playThrough: true,
                        position: 0.0,
                        loop: false
                    }, {
                        mixer: Webcaster.mixer,
                        node: Webcaster.node
                    }),
                    el: $("div.playlist-left")
                }),
                playlistRight: new Webcaster.View.Playlist({
                    model: new Webcaster.Model.Playlist({
                        side: "right",
                        files: [],
                        fileIndex: -1,
                        volumeLeft: 0,
                        volumeRight: 0,
                        trackGain: 100,
                        passThrough: false,
                        playThrough: true,
                        position: 0.0,
                        loop: false
                    }, {
                        mixer: Webcaster.mixer,
                        node: Webcaster.node
                    }),
                    el: $("div.playlist-right")
                })
            }
        });
        return _.invoke(Webcaster.views, "render");
    });

}).call(this);
*/
